minio:
  # For production use set this to "distributed" and set the replicas to 4 or more.
  mode: standalone

  # Default is 16 nodes but we set to 2 (the minimum) for testing purposes.  
  # replicas: 4
  resources:
    requests:
      # For production use the 
      memory: "4Gi"  
  ingress:
    enabled: true
    #annotations:
    #  kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - minio.lab.$DOMAIN
    tls:
      - hosts:
          - minio.lab.$DOMAIN
  consoleIngress:
    enabled: true
    #annotations:
    #  kubernetes.io/ingress.class: nginx
    paths: /
    hosts:
      - minio-console.lab.$DOMAIN
    tls:
      - hosts:
          - minio-console.lab.$DOMAIN
  environment:
    MINIO_BROWSER_REDIRECT_URL: https://minio-console.lab.$DOMAIN
  oidc:
    enabled: true
    configUrl: "https://auth.lab.$DOMAIN/auth/realms/datalab/.well-known/openid-configuration"
    clientId: "minio"
    claimName: "policy"
    scopes: "openid,profile,email"
    redirectUri: "https://minio-console.lab.$DOMAIN/oauth_callback"
    claimPrefix: ""
    comment: ""
    clientSecret: $KEYCLOAK_MINIO_CLIENT_SECRET
  policies:
    - name: stsonly
      statements:
        - resources:
            # Make sure `preferred_username` match with what you have specified as oidc.username-claim
            # In your onyxia-api configuration.
            # See: https://github.com/InseeFrLab/onyxia-api?tab=readme-ov-file#authentication-configuration
            # If you haven't specified this parameter, leave preferred_username, it's
            # the Keycloak's default.
            # You have also to make sure that the onyxia-minio client that you will
            # create later on has a preferred_username claim in it's OIDC Access Token JWT
            # (and that the value of this claim matches the Onyxia username of course).
            # As long as your onyxia and onyxia-minio client shares the same Keycloak realm
            # it will be the case.
            - 'arn:aws:s3:::user-${jwt:preferred_username}'
            - 'arn:aws:s3:::user-${jwt:preferred_username}/*'
          actions:
            - "s3:*"